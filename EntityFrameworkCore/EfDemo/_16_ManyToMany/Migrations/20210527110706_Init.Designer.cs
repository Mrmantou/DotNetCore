// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _16_ManyToMany;

namespace _16_ManyToMany.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210527110706_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_16_ManyToMany.Article", b =>
                {
                    b.Property<string>("ArticleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArticleId");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("_16_ManyToMany.ArticleRelateArticle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArticleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RelatedArticleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("RelatedArticleId");

                    b.ToTable("ArticleRelateArticle");
                });

            modelBuilder.Entity("_16_ManyToMany.ArticleRelateArticle", b =>
                {
                    b.HasOne("_16_ManyToMany.Article", "RelatedArticle")
                        .WithMany()
                        .HasForeignKey("ArticleId");

                    b.HasOne("_16_ManyToMany.Article", "Article")
                        .WithMany()
                        .HasForeignKey("RelatedArticleId");

                    b.Navigation("Article");

                    b.Navigation("RelatedArticle");
                });
#pragma warning restore 612, 618
        }
    }
}
